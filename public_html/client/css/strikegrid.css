@charset "UTF-8";
/* Usually, the outer container should not scroll, only the scrollbody. To accomplish this, either: 
 * (1) Give the container outside the component .el (outside .strike-grid-holder) some defined height, and/or 
 * (2) call StrikeGrid.height with a value.
 */
.strike-grid-holder {
  max-width: 100%;
  /* Normal usage. box sizes to the outer container, the height of which can be overridden with StrikeGrid.height: */
  height: 100%;
  /* Stick to outer example. This cannot be overridden with StrikeGrid.height.
   * Note that the outer container must have max-height defined, and overflow:scroll in this case: */
  /* height:fit-content; */
  /* x-scrolling example. This is compatable with setting StrikeGrid.height, but NOT with automatically 
   * scaling to an outer container. */
  overflow-x: scroll;
  overflow-y: hidden;
  transition: max-width 0.16s;
}
.table-container {
  max-width: 100%;
  background-color: #CCC;
  transition: width 0.16s, min-width 0.16s, max-width 0.16s;
}

.strike-grid {
  display: grid;
}

arrow-down, arrow-up {
  display: flex;
  font-size: 0.8rem;
  height: 100%;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0px;
  transform: rotate(90deg);
}
arrow-down::before, arrow-up::before {
  content: "âž¢";
}

arrow-up {
  transform: rotate(-90deg);
}

.strike-grid-header {
  /* sticky comes into effect if the container is larger than the content,
  * and causes its outer container to scroll. */
  position: -webkit-sticky;
  position: sticky;
  top: 0px;
  z-index: 1;
  /* keep visible even if we're scrolling the outer container. */
  background-color: #344;
  white-space: nowrap;
}
.strike-grid-header > [role=header-cel] {
  display: flex;
  overflow: hidden;
  align-items: center;
  color: white;
  width: 100%;
}
.strike-grid-header > [role=header-cel]:nth-child(odd) {
  background-color: #444;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-0 {
  background-color: #535353;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-1 {
  background-color: #54565f;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-2 {
  background-color: #54586b;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-3 {
  background-color: #565b77;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-4 {
  background-color: #575d82;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-5 {
  background-color: #59618e;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-6 {
  background-color: #596498;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-7 {
  background-color: #5b66a4;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-8 {
  background-color: #606cab;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-9 {
  background-color: #6571b2;
}
.strike-grid-header > [role=header-cel]:nth-child(odd).sort-color-10 {
  background-color: #6a76bb;
}
.strike-grid-header > [role=header-cel]:nth-child(even) {
  background-color: #535353;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-0 {
  background-color: #535353;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-1 {
  background-color: #54565f;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-2 {
  background-color: #54586b;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-3 {
  background-color: #565b77;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-4 {
  background-color: #575d82;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-5 {
  background-color: #59618e;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-6 {
  background-color: #596498;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-7 {
  background-color: #5b66a4;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-8 {
  background-color: #606cab;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-9 {
  background-color: #6571b2;
}
.strike-grid-header > [role=header-cel]:nth-child(even).sort-color-10 {
  background-color: #6a76bb;
}
.strike-grid-header > [role=header-cel] > .arrow-holder {
  position: relative;
  left: 1rem;
  width: 2rem;
}
.strike-grid-header > [role=header-cel] > .header-label {
  width: 100%;
  max-width: 100%;
  display: inline-block;
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
}
.strike-grid-header > [role=header-cel] > .header-label.with-arrows {
  width: calc(100% - 3rem);
  max-width: calc(100% - 3rem);
}

.strike-grid-scrollbody {
  position: relative;
  background-color: #CCC;
  overflow-x: visible;
  overflow-y: scroll;
  max-height: 100%;
}

.strike-grid-row {
  display: contents;
  color: rgb(26, 16, 5);
}
.strike-grid-row > div {
  display: flex;
  cursor: pointer;
  transition: all 0.16s;
}
.strike-grid-row.centertxt > div {
  justify-content: center;
  align-items: center;
}
.strike-grid-row:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(235, 235, 235);
}
.strike-grid-row:nth-child(odd) > div:nth-child(even) {
  background: #eeeeee;
}
.strike-grid-row:nth-child(even) > div:nth-child(odd) {
  background-color: #f3f3f3;
}
.strike-grid-row:nth-child(even) > div:nth-child(even) {
  background: whitesmoke;
}
@media (hover: hover) and (pointer: fine) {
  .strike-grid-row:hover:not(.selected):nth-child(odd) > div:nth-child(odd) {
    background-color: rgb(205, 212, 224);
  }
  .strike-grid-row:hover:not(.selected):nth-child(odd) > div:nth-child(even) {
    background: #d0d7e2;
  }
  .strike-grid-row:hover:not(.selected):nth-child(even) > div:nth-child(odd) {
    background-color: #d6dce6;
  }
  .strike-grid-row:hover:not(.selected):nth-child(even) > div:nth-child(even) {
    background: #dadfe8;
  }
}
.strike-grid-row.selected:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(183, 183, 183);
}
.strike-grid-row.selected:nth-child(odd) > div:nth-child(even) {
  background: #bababa;
}
.strike-grid-row.selected:nth-child(even) > div:nth-child(odd) {
  background-color: #bfbfbf;
}
.strike-grid-row.selected:nth-child(even) > div:nth-child(even) {
  background: #c1c1c1;
}
.strike-grid-row.red {
  color: white;
}
.strike-grid-row.red:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(215, 68, 68);
}
.strike-grid-row.red:nth-child(odd) > div:nth-child(even) {
  background: #d84848;
}
.strike-grid-row.red:nth-child(even) > div:nth-child(odd) {
  background-color: #da5151;
}
.strike-grid-row.red:nth-child(even) > div:nth-child(even) {
  background: #db5555;
}
@media (hover: hover) and (pointer: fine) {
  .strike-grid-row.red:hover:not(.selected):nth-child(odd) > div:nth-child(odd) {
    background-color: rgb(235, 106, 106);
  }
  .strike-grid-row.red:hover:not(.selected):nth-child(odd) > div:nth-child(even) {
    background: #ec6e6e;
  }
  .strike-grid-row.red:hover:not(.selected):nth-child(even) > div:nth-child(odd) {
    background-color: #ed7777;
  }
  .strike-grid-row.red:hover:not(.selected):nth-child(even) > div:nth-child(even) {
    background: #ed7c7c;
  }
}
.strike-grid-row.red.selected:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(243, 5, 5);
}
.strike-grid-row.red.selected:nth-child(odd) > div:nth-child(even) {
  background: #f80505;
}
.strike-grid-row.red.selected:nth-child(even) > div:nth-child(odd) {
  background-color: #fa0d0d;
}
.strike-grid-row.red.selected:nth-child(even) > div:nth-child(even) {
  background: #fa1212;
}
.strike-grid-row.amber {
  color: white;
}
.strike-grid-row.amber:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(221, 184, 51);
}
.strike-grid-row.amber:nth-child(odd) > div:nth-child(even) {
  background: #deba37;
}
.strike-grid-row.amber:nth-child(even) > div:nth-child(odd) {
  background-color: #dfbd40;
}
.strike-grid-row.amber:nth-child(even) > div:nth-child(even) {
  background: #e0be44;
}
@media (hover: hover) and (pointer: fine) {
  .strike-grid-row.amber:hover:not(.selected):nth-child(odd) > div:nth-child(odd) {
    background-color: rgb(222, 191, 78);
  }
  .strike-grid-row.amber:hover:not(.selected):nth-child(odd) > div:nth-child(even) {
    background: #dfc152;
  }
  .strike-grid-row.amber:hover:not(.selected):nth-child(even) > div:nth-child(odd) {
    background-color: #e0c45b;
  }
  .strike-grid-row.amber:hover:not(.selected):nth-child(even) > div:nth-child(even) {
    background: #e1c55f;
  }
}
.strike-grid-row.amber.selected:nth-child(odd) > div:nth-child(odd) {
  background-color: orange;
}
.strike-grid-row.amber.selected:nth-child(odd) > div:nth-child(even) {
  background: #ffa705;
}
.strike-grid-row.amber.selected:nth-child(even) > div:nth-child(odd) {
  background-color: #ffaa0f;
}
.strike-grid-row.amber.selected:nth-child(even) > div:nth-child(even) {
  background: #ffac14;
}
.strike-grid-row.blue {
  color: white;
}
.strike-grid-row.blue:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(86, 86, 214);
}
.strike-grid-row.blue:nth-child(odd) > div:nth-child(even) {
  background: #5a5ad7;
}
.strike-grid-row.blue:nth-child(even) > div:nth-child(odd) {
  background-color: #6262d9;
}
.strike-grid-row.blue:nth-child(even) > div:nth-child(even) {
  background: #6666da;
}
@media (hover: hover) and (pointer: fine) {
  .strike-grid-row.blue:hover:not(.selected):nth-child(odd) > div:nth-child(odd) {
    background-color: rgb(113, 113, 216);
  }
  .strike-grid-row.blue:hover:not(.selected):nth-child(odd) > div:nth-child(even) {
    background: #7575d9;
  }
  .strike-grid-row.blue:hover:not(.selected):nth-child(even) > div:nth-child(odd) {
    background-color: #7d7ddb;
  }
  .strike-grid-row.blue:hover:not(.selected):nth-child(even) > div:nth-child(even) {
    background: #8181dc;
  }
}
.strike-grid-row.blue.selected:nth-child(odd) > div:nth-child(odd) {
  background-color: rgb(88, 88, 216);
}
.strike-grid-row.blue.selected:nth-child(odd) > div:nth-child(even) {
  background: #5c5cd9;
}
.strike-grid-row.blue.selected:nth-child(even) > div:nth-child(odd) {
  background-color: #6464db;
}
.strike-grid-row.blue.selected:nth-child(even) > div:nth-child(even) {
  background: #6969dc;
}
.strike-grid-row.blur > div {
  -moz-filter: blur(3px);
  filter: blur(3px);
  transition: -moz-filter 1s ease;
  transition: filter 1s ease;
}